version: '3'
services:
  postgres:
    container_name: ms-postgres
    image: postgres
    ports:
      - "${DOCKER_DB_PORT}:5432"
    environment:
      POSTGRES_PASSWORD: "dbPassword"
      POSTGRES_USER: "dbUser"
    volumes:
      - ./init-sql/postgres_database_init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mount-data/postgres:/var/lib/postgresql/data
    restart: always
  mongo:
    container_name: ms-mongo
    image: mongo
    ports:
      - "${DOCKER_MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "dbUser"
      MONGO_INITDB_ROOT_PASSWORD: "dbPassword"
    volumes:
      - ./mount-data/mongo:/data/db
  redis:
    container_name: ms-redis
    image: redis
    command: >
      --requirepass redisPassword
    volumes:
      - ./mount-data/redis:/data
    ports:
      - "${DOCKER_REDIS_PORT}:6379"
  ms-gateway:
    container_name: ms-gateway
    image: golang:1.20-alpine
    ports:
      - "${DOCKER_GATEWAY_PORT}:80"
    volumes:
      - ${WORKSPACE_PATH}:/go/src/app
    working_dir: /go/src/app/ms-gateway
    command: >
      sh -c "go mod tidy
      && go run cmd/v1/main.go"
    restart:
      always
  ms-user:
    container_name: ms-user
    image: golang:1.20-alpine
    ports:
      - "${DOCKER_USER_SERVICE_PORT}:81"
    volumes:
      - ${WORKSPACE_PATH}:/go/src/app
    working_dir: /go/src/app/ms-user
    command: >
      sh -c "go run cmd/v1/main.go"
    depends_on:
      - postgres
      - redis
    restart:
      always
  ms-notification:
    container_name: ms-notification
    image: golang:1.20-alpine
    ports:
      - "${DOCKER_NOTIFICATION_SERVICE_PORT}:82"
    volumes:
      - ${WORKSPACE_PATH}:/go/src/app
    working_dir: /go/src/app/ms-notification
    command: >
      sh -c "go mod tidy
      && go run cmd/v1/main.go"
    depends_on:
      - mongo
    restart:
      always
  ms-worker:
    container_name: ms-worker
    image: golang:1.20-alpine
    volumes:
      - ${WORKSPACE_PATH}:/go/src/app
    working_dir: /go/src/app/ms-worker
    command: >
      sh -c "go mod tidy
      && go run cmd/v1/main.go"
    depends_on:
      - redis
    restart:
      always
  grafana:
    restart: always
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - ./mount_data/grafana:/var/lib/grafana
  loki:
    image: grafana/loki:2.1.0
    container_name: loki
    restart: unless-stopped
    ports:
      - "${LOKI_PORT}:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/config.yaml~


