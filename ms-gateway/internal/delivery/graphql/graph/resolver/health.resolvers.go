package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"
	"ms-workspace/gateway/internal/delivery/graphql/graph"
	"ms-workspace/gateway/internal/delivery/graphql/graph/model"
)

// MutationHealth is the resolver for the mutationHealth field.
func (r *mutationResolver) MutationHealth(ctx context.Context, input model.MutationHealthCheck) (*model.HealthCheck, error) {
	return &model.HealthCheck{
		Code:    200,
		Message: fmt.Sprintf("OK %s", input.Text),
	}, nil
}

// Health is the resolver for the health field.
func (r *queryResolver) Health(ctx context.Context) (*model.HealthCheck, error) {
	return &model.HealthCheck{
		Code:    200,
		Message: "OK",
	}, nil
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
